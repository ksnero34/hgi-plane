services:
  plane-redis:
    container_name: dev-plane-redis
    image: valkey/valkey:7.2.5-alpine
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - redisdata:/data

  plane-mq:
    container_name: dev-plane-mq
    image: rabbitmq:3.13.6-management-alpine
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env.dev
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}

  plane-minio:
    container_name: dev-plane-minio
    image: minio/minio
    #restart: unless-stopped
    networks:
      - dev_env
    command: server /export --console-address ":9090"
    volumes:
      - uploads:/export
    env_file:
      - .env.dev
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}

  plane-db:
    container_name: dev-plane-db
    image: hgi-postgres:16.4
    #restart: unless-stopped
    networks:
      - dev_env
    command: postgres -c 'max_connections=1000'
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env.dev
    environment:
      PGDATA: /var/lib/postgresql/data

  web:
    container_name: dev-web
    build:
      context: .
      dockerfile: ./web/Dockerfile.dev
    image: hgi-plane-dev/web:0.1.38
    restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./web:/app/web
    env_file:
      - ./web/.env.dev
    depends_on:
      - api
      - worker

  space:
    container_name: dev-space
    build:
      context: .
      dockerfile: ./space/Dockerfile.dev
    image: hgi-plane-dev/space:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./space:/app/space
    depends_on:
      - api
      - worker
      - web

  admin:
    container_name: dev-admin
    build:
      context: .
      dockerfile: ./admin/Dockerfile.dev
    image: hgi-plane-dev/admin:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./admin:/app/admin
    depends_on:
      - api
      - worker
      - web

  live:
    container_name: dev-live
    build:
      context: .
      dockerfile: ./live/Dockerfile.dev
    image: hgi-plane-dev/live:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./live:/app/live
    depends_on:
      - api
      - worker
      - web

  api:
    container_name: dev-api
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    image: hgi-plane-dev/api:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
    command: ./bin/docker-entrypoint-api-local.sh
    env_file:
      - ./apiserver/.env.dev
    depends_on:
      - plane-db
      - plane-redis

  worker:
    container_name: dev-worker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    image: hgi-plane-worker-dev:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
    command: ./bin/docker-entrypoint-worker.sh
    env_file:
      - ./apiserver/.env.dev
    depends_on:
      - api
      - plane-db
      - plane-redis

  beat-worker:
    container_name: dev-beat-worker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    image: hgi-plane-beat-worker-dev:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
    command: ./bin/docker-entrypoint-beat.sh
    env_file:
      - ./apiserver/.env.dev
    depends_on:
      - api
      - plane-db
      - plane-redis

  migrator:
    container_name: dev-migrator
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    image: hgi-plane-migrator-dev:0.1.38
    #restart: "no"
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
    command: ./bin/docker-entrypoint-migrator.sh --settings=plane.settings.local
    env_file:
      - ./apiserver/.env.dev
    depends_on:
      - plane-db
      - plane-redis

  proxy:
    container_name: plane.hgi.com
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: hgi-plane-dev/proxy:0.1.38
    #restart: unless-stopped
    networks:
      - dev_env
    ports:
      - ${NGINX_PORT}:18080
    env_file:
      - .env.dev
    environment:
      # FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT:-5242880}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-uploads}
    depends_on:
      - web
      - api
      - space
      - admin

volumes:
  redisdata:
  uploads:
  pgdata:
  rabbitmq_data:

networks:
  dev_env:
    external: true
